{"version":3,"sources":["components/Navbar/style.js","pages/MainPage/style.js","components/Navbar/index.jsx","components/translator/style.js","components/translator/index.jsx","pages/MainPage/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbarstyle","styled","div","Yandexstyle","Dictionarystyle","span","Navbar","Wrapperstyle","Inputstyle","Positionstyle","Linktext","p","Transstyle","Translator","useState","state","setstate","useEffect","onChange","e","selectValue","document","getElementById","value","axios","get","target","then","res","console","log","data","def","catch","placeholder","name","id","autoFocus","href","defaultValue","map","text","ts","pos","tr","item","style","color","marginRight","gen","MainPage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.70e4aac7.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Navbarstyle = styled.div`\r\n  width: 100%;\r\n  height: 140px;\r\n  background-color: #e61400;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 60px;\r\n  font-family: \"Segoe UI\", Tahoma, Verdana, sans-serif;\r\n  p {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const Yandexstyle = styled.div`\r\n  width: fit-content;\r\n  height: fit-content;\r\n  background-color: #fff;\r\n  padding: 0px 14px;\r\n  letter-spacing: 3px;\r\n  color: #2b2b2b;\r\n  font-weight: 700;\r\n  font-size: 65px;\r\n  margin: 0;\r\n  span {\r\n    color: #e61400;\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nexport const Dictionarystyle = styled.span`\r\n    color: white;\r\n    margin-left: 24px;\r\n`","import styled from \"styled-components\";\r\n\r\nexport const Mainpagewrapepr = styled.div`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n`;\r\n","import React from \"react\";\r\nimport { Dictionarystyle, Navbarstyle, Yandexstyle } from \"./style\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <Navbarstyle>\r\n      <p>\r\n        <Yandexstyle>\r\n          <span>Y</span>andex\r\n        </Yandexstyle>\r\n        <Dictionarystyle>dictionary</Dictionarystyle>\r\n      </p>\r\n    </Navbarstyle>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapperstyle = styled.div`\r\n  width: 100%;\r\n  background-color: #fff;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  padding: 0 200px;\r\n  font-family: \"Segoe UI\", Tahoma, Verdana, sans-serif;\r\n  margin-top: 100px;\r\n\r\n  select {\r\n    width: fit-content;\r\n    height: 45px;\r\n    padding: auto 20px;\r\n    /* border: none; */\r\n    border-radius: 5px;\r\n    margin: 10px 50px;\r\n    paint-order: 7px 16px;\r\n    font-size: 14px;\r\n    padding: 5px 14px;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n  }\r\n`;\r\n\r\nexport const Inputstyle = styled.div`\r\n  width: 50%;\r\n`;\r\n\r\nexport const Positionstyle = styled.div`\r\n  width: 100%;\r\n  margin-right: 50px;\r\n  textarea {\r\n    width: 100%;\r\n    height: 200px;\r\n    border: 1px solid black;\r\n    border-radius: 10px;\r\n    font-size: 20px;\r\n    font-family: monospace;\r\n    padding: 20px 0px 0px 15px;\r\n  }\r\n`;\r\n\r\nexport const Linktext = styled.p`\r\n  font-weight: 400;\r\n`;\r\n\r\nexport const Transstyle = styled.div`\r\n  width: 50%;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Inputstyle,\r\n  Linktext,\r\n  Positionstyle,\r\n  Transstyle,\r\n  Wrapperstyle,\r\n} from \"./style\";\r\n\r\nfunction Translator() {\r\n  const [state, setstate] = useState([]);\r\n\r\n  const getDictionary = (e) => {\r\n    const selectValue = document.getElementById(\"select\").value;\r\n    const apiKey =\r\n      \"dict.1.1.20210915T143839Z.96e17f7f60ad28d4.e1bf52d3b734ee95be20a7e82dfe268e2601fce7\";\r\n    axios\r\n      .get(\r\n        `https://dictionary.yandex.net/api/v1/dicservice.json/lookup?key=${apiKey}&lang=${selectValue}&text=${e.target.value}`\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setstate(res.data.def);\r\n      })\r\n\r\n      .catch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // getwords();\r\n  }, []);\r\n  return (\r\n    <Wrapperstyle>\r\n      <Inputstyle>\r\n        <Positionstyle>\r\n          <textarea\r\n            onChange={getDictionary}\r\n            placeholder=\"Type something to translate\"\r\n            name=\"translate_word\"\r\n            id=\"textarea\"\r\n            autoFocus\r\n          ></textarea>\r\n        </Positionstyle>\r\n        <Linktext>\r\n          Powered by <a href=\"https://yandex.com/dev/dictionary/\">Yandex</a>\r\n        </Linktext>\r\n      </Inputstyle>\r\n      <select id=\"select\" defaultValue=\"en-ru\" name=\"select\">\r\n        <option value=\"ru-ru\">Russian ➞ Russian </option>\r\n        <option value=\"ru-en\">Russian ➞ English </option>\r\n        <option value=\"ru-pl\">Russian ➞ Polandish </option>\r\n        <option value=\"ru-uk\">Russian ➞ Ukrainian </option>\r\n        <option value=\"ru-de\">Russian ➞ German </option>\r\n        <option value=\"ru-fr\">Russian ➞ French </option>\r\n        <option value=\"ru-es\">Russian ➞ Spanish </option>\r\n        <option value=\"ru-it\">Russian ➞ Italian </option>\r\n        <option value=\"ru-tr\">Russian ➞ Turkish </option>\r\n        <option value=\"en-ru\">English ➞ Russian </option>\r\n        <option value=\"en-en\">English ➞ English </option>\r\n        <option value=\"en-de\">English ➞ German </option>\r\n        <option value=\"en-fr\">English ➞ French </option>\r\n        <option value=\"en-es\">English ➞ Spanish </option>\r\n        <option value=\"en-it\">English ➞ Italian </option>\r\n        <option value=\"en-tr\">English ➞ Turkish </option>\r\n        <option value=\"pl-ru\">Polandish ➞ Russian </option>\r\n        <option value=\"uk-ru\">Ukrainian ➞ Russian </option>\r\n        <option value=\"de-ru\">German ➞ Russian </option>\r\n        <option value=\"de-en\">German ➞ English </option>\r\n        <option value=\"fr-ru\">French ➞ Russian </option>\r\n        <option value=\"fr-en\">French ➞ English </option>\r\n        <option value=\"es-ru\">Spanish ➞ Russian </option>\r\n        <option value=\"es-en\">Spanish ➞ English </option>\r\n        <option value=\"it-ru\">Italian ➞ Russian </option>\r\n        <option value=\"it-en\">Italian ➞ English </option>\r\n        <option value=\"tr-ru\">Turkish ➞ Russian </option>\r\n        <option value=\"tr-en\">Turkish ➞ English </option>\r\n      </select>\r\n      <Transstyle>\r\n        <ul>\r\n          {state.map((value) => (\r\n            <ol>\r\n              <b>{value?.text}</b>     [{value?.ts}] {value?.pos}\r\n              {value?.tr.map((item) => (\r\n                <li>\r\n                  <span style={{ color: \"blue\" ,marginRight: \"10px\"}}>{item.text}</span>\r\n                  {item.gen},\r\n                  {/* {item?.syn.map((syntacse) => (\r\n                    <span>\r\n                      {syntacse?.text} {syntacse.gen}\r\n                      <br />\r\n                    </span>\r\n                  ))} */}\r\n                </li>\r\n              ))}\r\n            </ol>\r\n          ))}\r\n        </ul>\r\n      </Transstyle>\r\n    </Wrapperstyle>\r\n  );\r\n}\r\n\r\nexport default Translator;\r\n","import React from \"react\";\r\nimport {} from \"./style\";\r\nimport Navbar from \"../../components/Navbar/index\";\r\nimport Translator from \"../../components/translator\";\r\n\r\nfunction MainPage() {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Translator />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import \"./App.css\";\nimport MainPage from \"./pages/MainPage/index\";\n\nfunction App() {\n  return (\n    <div>\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}